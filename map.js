export class Map {
  constructor(ctx) {
    this.ctx = ctx;
    this.mapX = 26;
    this.mapY = 20;
    this.mapS = 64;
    this.wall = [
      [[1],     [1],     [2],     [1],     [2],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    7], [    0], [    0], [    3], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    8], [    0], [    0], [ 1, 4], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    1], [    2], [    2], [    8], [    2], [    2], [    1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    1], [    1], [    1], [    1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    6], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    6], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    6], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    6], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    6], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [    0], [1]],
      [[1],     [1],     [2],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1],     [1], [1]],
    ];
    this.ceiling = [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 0, 1],
      [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ];
    this.floor = [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 0, 1],
      [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ]
  }
  draw() {
    for (let y = 0; y < this.mapY; y++) {
      for (let x = 0; x < this.mapX; x++) {
        var color;
        this.grid[y][x] != 0 ? color = "black" : color = "white";
        var Xo = x * this.mapS / 10;
        var Yo = y * this.mapS / 10;
        this.ctx.fillStyle = color;
        this.ctx.fillRect(Xo + 10, Yo + 10, this.mapS / 10, this.mapS / 10)
      }
    }
  }
  checkCollision(y, x) {
    var collision = false;
    if (this.wall[y][x] != 0) {
      collision = true;
    }
    return collision;
  }
  getTile(x, y, grid) {
    var X = Math.floor(x / this.mapS);
    var Y = Math.floor(y / this.mapS);
    var tile
    switch (grid) {
      case "wall":
        return this.wall[Y][X]
        break;
      case "ceiling":
        return this.ceiling[Y][X]
        break;
      case "floor":
        return this.floor[Y][X]
        break;
      default:
    }
  }
}
